apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'com.ibm.iotf.connector.Connector'
sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'

repositories {

	// read from lib/ directory
	flatDir {
		dirs 'lib'
	}
}

dependencies {
	compile 'org.apache.kafka:kafka-clients:0.9.0.0'
	compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.6'
    compile 'org.slf4j.api:slf4j-api-1.7.6'	
	compile 'clang:common-lang3'
	compile 'ccodec:commons-codec-1.10'
	compile 'clog:commons-logging-1.2'
	compile 'cnet:commons-net-3.3'
	compile 'gson:gson-2.2.4'
	compile 'paho:org.eclipse.paho.client.mqttv3-1.0.3-20150818.040635-202'
	compile 'messagehub.login:messagehub.login-1.0.0'
	compile 'jacksoncore:jackson-core-2.7.0-rc1'
	compile 'jacksonannotations:jackson-annotations-2.7.0-rc1'
	compile 'jacksondatabind:jackson-databind-2.7.0-rc1'
}

compileJava {
	source = 'src'
}

jar {   
	doLast {
		copy {
            from 'resources'
            into 'build/libs/resources'
            exclude 'log4j.properties'
        }

        copy {
            from 'resources/log4j.properties'
            into 'build/libs'
        }

		copy {
            from 'lib'
            into 'build/libs/lib'
        }
	}
    // Provide Main-Class so the JAR executes properly, along with the required classpath data.
    manifest {
        attributes('Main-Class': mainClassName,
        'Class-Path': '. ./ ./lib ' + configurations.runtime.files.collect { './lib/' + it.name }.join(' '))
    }
}

['Zip', 'Tar'].each { suffix ->
    "dist$suffix" {
        def basePath = baseName + '-' + version

        from('resources') {
            into { basePath + '/bin/resources' }
            exclude 'log4j.properties'
        }    

        from('resources') {
            into { basePath + '/lib' }
            include 'log4j.properties'
        }
    }
}